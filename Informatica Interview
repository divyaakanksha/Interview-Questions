setTimeout() causes the event to be ansynchronous therefore being executed after all the synchronous code, giving your element more time to load. 
Asynchronous callbacks like the callback in setTimeout() are placed in the event queue and put on the stack by the event loop after the stack of synchronous code is empty.

The event queue is responsible for sending new functions to the track for processing. 
It follows the queue data structure to maintain the correct sequence in which all operations should be sent for execution. 
Whenever an async function is called, it is sent to a browser API. These are APIs built into the browser.

The Event Loop has one simple job â€” to monitor the Call Stack and the Callback Queue. 
If the Call Stack is empty, the Event Loop will take the first event from the queue and will push it to the Call Stack, which effectively runs it. 
Such an iteration is called a tick in the Event Loop

for (var i = 1; i <= 3; i++) {
    (function(index) {
        setTimeout(function() { console.log(index); }, i * 1000);
    })(i);
}

Spread operator in ES6
let numberStore = [0, 1, 2];
let newNumber = 12;
numberStore = [...numberStore, newNumber];

https://medium.com/@DaphneWatson/anonymous-functions-and-iife-immediately-invoked-function-expressions-with-javascript-69d3f554fca2#:~:text=The%20function%20name%20is%20not,to%20as%20a%20function%20literal.&text=IIFE%20(known%20as%20Immediately%20Invoked,have%20a%20name%20as%20well.

https://dzone.com/articles/easy-javascript-part-13-four-ways-to-create-object

https://medium.com/javascript-everyday/javascript-theory-promise-vs-observable-d3087bc1239a

https://javascript.info/async-await

https://www.w3schools.com/css/css_specificity.asp

https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Relationship_of_Grid_Layout

https://www.w3schools.com/css/tryit.asp?filename=trycss3_var

https://css-tricks.com/quick-css-trick-how-to-center-an-object-exactly-in-the-center/

<!DOCTYPE html>
<html>
<head>
<style>

.test1 {
  width: 200px;
  height: 200px;
  border: 1px solid red;
  position: absolute;
  top:0;
  right:0;
  left:0;
  bottom:0;
  margin: auto;
}

.test {
  width: 200px;
  height: 200px;
  border: 1px solid red;
  position: fixed;
  top:50%;
  left:50%;
  margin-top: -100px;
  margin-left:-100px;
  //transform: translate(-50%, -50%);
}
</style>
</head>
<body>

<div class="test"></div>

</body>
</html>

